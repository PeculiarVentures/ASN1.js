"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5058],{908:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"examples/create-new-asn-structures","title":"Create new ASN.1 structures","description":"","source":"@site/docs/examples/create-new-asn-structures.mdx","sourceDirName":"examples","slug":"/examples/create-new-asn-structures","permalink":"/docs/examples/create-new-asn-structures","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"examples","previous":{"title":"Create new ASN.1 structures by calling constructors with parameters","permalink":"/docs/examples/create-new-asn-structures-by-calling-constructors-with-parameters"},"next":{"title":"Use \\"internal schemas\\" for primitively encoded data types","permalink":"/docs/examples/use-internal-schemas-for-primitively-encoded-data-types"}}');var s=r(4848),a=r(8453),c=r(8069);const u="import * as asn1js from 'asn1js';\n\nvar sequence = new asn1js.Sequence();\nsequence.valueBlock.value.push(new asn1js.Integer({ value: 1 }));\n\nvar sequence_buffer = sequence.toBER(false); // Encode current sequence to BER (in ArrayBuffer)\nvar current_size = sequence_buffer.byteLength;\n\nvar integer_data = new ArrayBuffer(8);\nvar integer_view = new Uint8Array(integer_data);\ninteger_view[0] = 0x01;\ninteger_view[1] = 0x01;\ninteger_view[2] = 0x01;\ninteger_view[3] = 0x01;\ninteger_view[4] = 0x01;\ninteger_view[5] = 0x01;\ninteger_view[6] = 0x01;\ninteger_view[7] = 0x01;\n\nsequence.valueBlock.value.push(new asn1js.Integer({\n  isHexOnly: true,\n  valueHex: integer_data,\n})); // Put too long for decoding Integer value\n\nsequence_buffer = sequence.toBER();\ncurrent_size = sequence_buffer.byteLength;\n",i={},l="Create new ASN.1 structures",o={},d=[];function w(e){const n={h1:"h1",header:"header",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"create-new-asn1-structures",children:"Create new ASN.1 structures"})}),"\n",(0,s.jsx)(c.A,{language:"ts",children:u})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(w,{...e})}):w(e)}}}]);