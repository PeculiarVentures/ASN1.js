"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[491],{8623:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>a,frontMatter:()=>i,metadata:()=>d,toc:()=>o});var r=n(4848),l=n(8453);const i={id:"IDerConvertible",title:"Interface: IDerConvertible",sidebar_label:"IDerConvertible",sidebar_position:0,custom_edit_url:null},s=void 0,d={id:"api/interfaces/IDerConvertible",title:"Interface: IDerConvertible",description:"Methods",source:"@site/docs/api/interfaces/IDerConvertible.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/IDerConvertible",permalink:"/docs/api/interfaces/IDerConvertible",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"IDerConvertible",title:"Interface: IDerConvertible",sidebar_label:"IDerConvertible",sidebar_position:0,custom_edit_url:null},sidebar:"docs",previous:{title:"IDateConvertible",permalink:"/docs/api/interfaces/IDateConvertible"},next:{title:"IGeneralizedTime",permalink:"/docs/api/interfaces/IGeneralizedTime"}},c={},o=[{value:"Methods",id:"methods",level:2},{value:"fromDER",id:"fromder",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"toDER",id:"toder",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4}];function h(e){const t={code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h3,{id:"fromder",children:"fromDER"}),"\n",(0,r.jsxs)(t.p,{children:["\u25b8 ",(0,r.jsx)(t.strong,{children:"fromDER"}),"(",(0,r.jsx)(t.code,{children:"inputBuffer"}),", ",(0,r.jsx)(t.code,{children:"inputOffset"}),", ",(0,r.jsx)(t.code,{children:"inputLength"}),", ",(0,r.jsx)(t.code,{children:"expectedLength?"}),"): ",(0,r.jsx)(t.code,{children:"number"})]}),"\n",(0,r.jsx)(t.p,{children:"Base function for converting block from DER encoded array of bytes"}),"\n",(0,r.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"inputBuffer"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"ArrayBuffer"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"ASN.1 DER encoded array"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"inputOffset"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"number"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Offset in ASN.1 DER encoded array where decoding should be started"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"inputLength"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"number"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Maximum length of array of bytes which can be using in this function"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"expectedLength?"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"number"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Expected length of converted VALUE_HEX buffer"})]})]})]}),"\n",(0,r.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"number"})}),"\n",(0,r.jsx)(t.p,{children:"Offset after least decoded byte"}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"toder",children:"toDER"}),"\n",(0,r.jsxs)(t.p,{children:["\u25b8 ",(0,r.jsx)(t.strong,{children:"toDER"}),"(",(0,r.jsx)(t.code,{children:"sizeOnly?"}),"): ",(0,r.jsx)(t.code,{children:"ArrayBuffer"})]}),"\n",(0,r.jsx)(t.p,{children:"Encoding of current ASN.1 block into ASN.1 encoded array (DER rules)"}),"\n",(0,r.jsx)(t.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"sizeOnly?"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"boolean"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Flag that we need only a size of encoding, not a real array of bytes"})]})})]}),"\n",(0,r.jsx)(t.h4,{id:"returns-1",children:"Returns"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"ArrayBuffer"})}),"\n",(0,r.jsx)(t.p,{children:"ASN.1 DER encoded array"})]})}function a(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>d});var r=n(6540);const l={},i=r.createContext(l);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);