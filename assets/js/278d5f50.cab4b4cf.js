"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5689],{2357:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>o});var r=n(5893),l=n(1151);const s={id:"IBerConvertible",title:"Interface: IBerConvertible",sidebar_label:"IBerConvertible",sidebar_position:0,custom_edit_url:null},i=void 0,d={id:"api/interfaces/IBerConvertible",title:"Interface: IBerConvertible",description:"Implemented by",source:"@site/docs/api/interfaces/IBerConvertible.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/IBerConvertible",permalink:"/docs/api/interfaces/IBerConvertible",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"IBerConvertible",title:"Interface: IBerConvertible",sidebar_label:"IBerConvertible",sidebar_position:0,custom_edit_url:null},sidebar:"docs",previous:{title:"IBaseBlock",permalink:"/docs/api/interfaces/IBaseBlock"},next:{title:"IChoice",permalink:"/docs/api/interfaces/IChoice"}},c={},o=[{value:"Implemented by",id:"implemented-by",level:2},{value:"Methods",id:"methods",level:2},{value:"fromBER",id:"fromber",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"toBER",id:"tober",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4}];function a(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"implemented-by",children:"Implemented by"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"/docs/api/classes/BaseBlock",children:(0,r.jsx)(t.code,{children:"BaseBlock"})})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"/docs/api/classes/RawData",children:(0,r.jsx)(t.code,{children:"RawData"})})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"/docs/api/classes/ValueBlock",children:(0,r.jsx)(t.code,{children:"ValueBlock"})})}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(t.h3,{id:"fromber",children:"fromBER"}),"\n",(0,r.jsxs)(t.p,{children:["\u25b8 ",(0,r.jsx)(t.strong,{children:"fromBER"}),"(",(0,r.jsx)(t.code,{children:"inputBuffer"}),", ",(0,r.jsx)(t.code,{children:"inputOffset"}),", ",(0,r.jsx)(t.code,{children:"inputLength"}),"): ",(0,r.jsx)(t.code,{children:"number"})]}),"\n",(0,r.jsx)(t.p,{children:"Base function for converting block from BER encoded array of bytes"}),"\n",(0,r.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"inputBuffer"})}),(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,r.jsx)(t.code,{children:"Uint8Array"})," | ",(0,r.jsx)(t.code,{children:"ArrayBuffer"})]}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"ASN.1 BER encoded array"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"inputOffset"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"number"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Offset in ASN.1 BER encoded array where decoding should be started"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"inputLength"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"number"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Maximum length of array of bytes which can be using in this function"})]})]})]}),"\n",(0,r.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"number"})}),"\n",(0,r.jsx)(t.p,{children:"Offset after least decoded byte"}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"tober",children:"toBER"}),"\n",(0,r.jsxs)(t.p,{children:["\u25b8 ",(0,r.jsx)(t.strong,{children:"toBER"}),"(",(0,r.jsx)(t.code,{children:"sizeOnly?"}),"): ",(0,r.jsx)(t.code,{children:"ArrayBuffer"})]}),"\n",(0,r.jsx)(t.p,{children:"Encoding of current ASN.1 block into ASN.1 encoded array (BER rules)"}),"\n",(0,r.jsx)(t.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"sizeOnly?"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.code,{children:"boolean"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Flag that we need only a size of encoding, not a real array of bytes"})]})})]}),"\n",(0,r.jsx)(t.h4,{id:"returns-1",children:"Returns"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"ArrayBuffer"})}),"\n",(0,r.jsx)(t.p,{children:"ASN.1 BER encoded array"})]})}function h(e={}){const{wrapper:t}={...(0,l.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>d,a:()=>i});var r=n(7294);const l={},s=r.createContext(l);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);