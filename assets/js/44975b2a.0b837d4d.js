"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3161],{5603:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"examples/create-new-asn-structures-by-calling-constructors-with-parameters","title":"Create new ASN.1 structures by calling constructors with parameters","description":"","source":"@site/docs/examples/create-new-asn-structures-by-calling-constructors-with-parameters.mdx","sourceDirName":"examples","slug":"/examples/create-new-asn-structures-by-calling-constructors-with-parameters","permalink":"/docs/examples/create-new-asn-structures-by-calling-constructors-with-parameters","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"examples","next":{"title":"Create new ASN.1 structures","permalink":"/docs/examples/create-new-asn-structures"}}');var n=t(4848),a=t(8453),c=t(8069);const u="import * as asn1js from 'asn1js';\n\nvar sequence2 = new asn1js.Sequence({\n  value: [\n    new asn1js.Integer({ value: 1 }),\n    new asn1js.Integer({\n      isHexOnly: true,\n      valueHex: integer_data\n    }),\n  ]\n});\n",l={},i="Create new ASN.1 structures by calling constructors with parameters",o={},p=[];function w(e){const s={h1:"h1",header:"header",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"create-new-asn1-structures-by-calling-constructors-with-parameters",children:"Create new ASN.1 structures by calling constructors with parameters"})}),"\n",(0,n.jsx)(c.A,{language:"ts",children:u})]})}function m(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(w,{...e})}):w(e)}}}]);